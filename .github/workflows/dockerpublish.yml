name: Docker

on:
  push:
    branches:
      - master

    tags:
      - v*

env:
  IMAGE_NAME: stack-hls

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ghc-version: ["8.6.4", "8.6.5", "8.8.2", "8.8.3", "8.10.1"]

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: docker build . --file Dockerfile --build-arg GHC_VERSION=${{ matrix.ghc-version }}

  push:
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    strategy:
      matrix:
        ghc-version: ["8.6.4", "8.6.5", "8.8.2", "8.8.3", "8.10.1"]

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --build-arg GHC_VERSION=${{ matrix.ghc-version }} --tag image

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME-${{ matrix.ghc-version }}

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
